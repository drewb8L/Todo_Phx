{"ast":null,"code":"var _jsxFileName = \"/Users/drew/Desktop/Code/Elixir/phoenix/todo_react/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { deleteTodo, getTodo, getTodos, updateTodo, updateTodo2 } from \"../jobs\";\nimport './todo.css';\nimport { message, Popconfirm } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todo = props => {\n  _s();\n\n  const handleComplete = e => {\n    let todo = e.target.value;\n    todo = JSON.parse(todo);\n    todo.complete = !todo.complete;\n    console.log(todo.complete);\n    updateTodo(todo).then(onRefresh());\n  };\n\n  const handelDelete = e => {\n    console.log(e.target.value);\n    deleteTodo(e.target.value).then(refresh());\n    message.info(\"Task deleted\");\n  };\n\n  const [refreshing, setRefreshing] = useState(false);\n\n  const refresh = () => {\n    getTodos();\n  };\n\n  const onRefresh = useCallback(async () => {\n    setRefreshing(true);\n    await getTodos();\n    setRefreshing(false);\n    console.log('Refreshing: ' + refreshing);\n  }, [refreshing]);\n  useEffect(() => {\n    refresh();\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Complete: \", props.complete ? 'Yes' : 'No']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"update\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"complete-toggle\",\n          style: props.complete ? {\n            backgroundColor: \"green\"\n          } : {\n            backgroundColor: \"red\"\n          },\n          value: props.todo,\n          onClick: handleComplete,\n          children: props.complete ? 'Done' : 'complete task'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Popconfirm, {\n          title: \"Delete task?\",\n          onConfirm: () => handelDelete,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete\",\n            value: props.id,\n            onClick: handelDelete,\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Todo, \"l8wQlXLBGfnQalrs5bO6b/Gw7vY=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","deleteTodo","getTodo","getTodos","updateTodo","updateTodo2","message","Popconfirm","Todo","props","handleComplete","e","todo","target","value","JSON","parse","complete","console","log","then","onRefresh","handelDelete","refresh","info","refreshing","setRefreshing","title","backgroundColor","id"],"sources":["/Users/drew/Desktop/Code/Elixir/phoenix/todo_react/src/components/Todo.js"],"sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\nimport {deleteTodo, getTodo, getTodos, updateTodo, updateTodo2} from \"../jobs\";\nimport './todo.css'\nimport {message, Popconfirm} from \"antd\";\nconst Todo = (props) => {\n\n    const handleComplete = (e) =>{\n     let todo = e.target.value\n        todo = JSON.parse(todo)\n        todo.complete = !todo.complete\n        console.log(todo.complete)\n        updateTodo(todo).then(onRefresh())\n\n    }\n    const handelDelete = (e) => {\n        console.log(e.target.value)\n        deleteTodo(e.target.value).then(refresh())\n        message.info(\"Task deleted\")\n\n    }\n\n    const [refreshing, setRefreshing] = useState(false)\n    const refresh = () => {\n        getTodos()\n    }\n\n    const onRefresh = useCallback( async () =>{\n        setRefreshing(true)\n        await getTodos()\n        setRefreshing(false)\n        console.log('Refreshing: ' + refreshing)\n    },[refreshing])\n\n    useEffect(() => {\n        refresh()\n    })\n\n    return (\n        <>\n            <div className=\"todo\">\n                <h4>{props.title}</h4>\n                <p>Complete: {props.complete ? 'Yes' : 'No' }</p>\n                <section className=\"update\">\n                    <button>edit</button>\n                    <button className={\"complete-toggle\"} style={props.complete ? {backgroundColor:\"green\"}: {backgroundColor:\"red\"}} value={props.todo} onClick={handleComplete}>{props.complete ? 'Done': 'complete task'}</button>\n                    <Popconfirm title={\"Delete task?\"} onConfirm={() => handelDelete}>\n                        <button className={\"delete\"} value={props.id} onClick={handelDelete}>delete</button>\n                    </Popconfirm>\n\n                </section>\n            </div>\n\n\n\n        </>\n    )\n}\n\nexport default Todo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAsD,OAAtD;AACA,SAAQC,UAAR,EAAoBC,OAApB,EAA6BC,QAA7B,EAAuCC,UAAvC,EAAmDC,WAAnD,QAAqE,SAArE;AACA,OAAO,YAAP;AACA,SAAQC,OAAR,EAAiBC,UAAjB,QAAkC,MAAlC;;;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EAAA;;EAEpB,MAAMC,cAAc,GAAIC,CAAD,IAAM;IAC5B,IAAIC,IAAI,GAAGD,CAAC,CAACE,MAAF,CAASC,KAApB;IACGF,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP;IACAA,IAAI,CAACK,QAAL,GAAgB,CAACL,IAAI,CAACK,QAAtB;IACAC,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACK,QAAjB;IACAb,UAAU,CAACQ,IAAD,CAAV,CAAiBQ,IAAjB,CAAsBC,SAAS,EAA/B;EAEH,CAPD;;EAQA,MAAMC,YAAY,GAAIX,CAAD,IAAO;IACxBO,OAAO,CAACC,GAAR,CAAYR,CAAC,CAACE,MAAF,CAASC,KAArB;IACAb,UAAU,CAACU,CAAC,CAACE,MAAF,CAASC,KAAV,CAAV,CAA2BM,IAA3B,CAAgCG,OAAO,EAAvC;IACAjB,OAAO,CAACkB,IAAR,CAAa,cAAb;EAEH,CALD;;EAOA,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAC,KAAD,CAA5C;;EACA,MAAMuB,OAAO,GAAG,MAAM;IAClBpB,QAAQ;EACX,CAFD;;EAIA,MAAMkB,SAAS,GAAGvB,WAAW,CAAE,YAAW;IACtC4B,aAAa,CAAC,IAAD,CAAb;IACA,MAAMvB,QAAQ,EAAd;IACAuB,aAAa,CAAC,KAAD,CAAb;IACAR,OAAO,CAACC,GAAR,CAAY,iBAAiBM,UAA7B;EACH,CAL4B,EAK3B,CAACA,UAAD,CAL2B,CAA7B;EAOA1B,SAAS,CAAC,MAAM;IACZwB,OAAO;EACV,CAFQ,CAAT;EAIA,oBACI;IAAA,uBACI;MAAK,SAAS,EAAC,MAAf;MAAA,wBACI;QAAA,UAAKd,KAAK,CAACkB;MAAX;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAA,yBAAclB,KAAK,CAACQ,QAAN,GAAiB,KAAjB,GAAyB,IAAvC;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGI;QAAS,SAAS,EAAC,QAAnB;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,SAAS,EAAE,iBAAnB;UAAsC,KAAK,EAAER,KAAK,CAACQ,QAAN,GAAiB;YAACW,eAAe,EAAC;UAAjB,CAAjB,GAA4C;YAACA,eAAe,EAAC;UAAjB,CAAzF;UAAkH,KAAK,EAAEnB,KAAK,CAACG,IAA/H;UAAqI,OAAO,EAAEF,cAA9I;UAAA,UAA+JD,KAAK,CAACQ,QAAN,GAAiB,MAAjB,GAAyB;QAAxL;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI,QAAC,UAAD;UAAY,KAAK,EAAE,cAAnB;UAAmC,SAAS,EAAE,MAAMK,YAApD;UAAA,uBACI;YAAQ,SAAS,EAAE,QAAnB;YAA6B,KAAK,EAAEb,KAAK,CAACoB,EAA1C;YAA8C,OAAO,EAAEP,YAAvD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAHJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAmBH,CApDD;;GAAMd,I;;KAAAA,I;AAsDN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}