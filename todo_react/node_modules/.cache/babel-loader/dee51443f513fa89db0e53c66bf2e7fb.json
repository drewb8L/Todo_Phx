{"ast":null,"code":"var _jsxFileName = \"/Users/drew/Desktop/Code/Elixir/phoenix/todo_phx/todo_react/src/components/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { deleteTodo, getTodo, getTodos, updateTodo, updateTodo2 } from '../jobs';\nimport './todo.css';\nimport 'antd/dist/antd.css';\nimport { Button, message, Modal } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(props) {\n  _s();\n\n  const [completed, setCompleted] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [edit, setEdit] = useState({\n    title: '',\n    id: ''\n  });\n  useEffect(() => {\n    getTodos();\n  }, [setCompleted]);\n\n  const handleComplete = e => {\n    let todo = e.target.value;\n    todo = JSON.parse(todo);\n    todo.complete = !todo.complete;\n    console.log(todo.complete);\n    updateTodo(todo).then(() => props.changeState(['new data']));\n    message.info(todo.complete === false ? `${todo.title} Reset` : `${todo.title} Completed`);\n  };\n\n  const handelDelete = e => {\n    deleteTodo(e.target.value).then(() => props.changeState(['deleted todo']));\n    message.info('Task deleted');\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleEdit = e => {\n    e.preventDefault();\n    showModal();\n    console.log({ ...edit,\n      id: props.id\n    });\n    updateTodo({ ...edit,\n      title: edit.title,\n      id: props.id\n    }).then(() => props.changeState(['new data']));\n    message.info('Task updated');\n    setVisible(false);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Complete:\", props.complete ? 'Yes' : 'No']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"update\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"edit\",\n        style: {\n          backgroundColor: '#33bfff'\n        },\n        onClick: showModal,\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"complete-toggle\",\n        style: props.complete ? {\n          backgroundColor: 'green'\n        } : {\n          backgroundColor: 'red'\n        },\n        value: props.todo,\n        onClick: handleComplete,\n        children: props.complete ? 'Done' : 'complete task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"delete\",\n        value: props.id,\n        onClick: handelDelete,\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: visible,\n        onOk: handleEdit,\n        title: \"Edit\",\n        footer: null,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEdit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"New Title\",\n            value: edit.title,\n            onChange: e => setEdit({ ...edit,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"submit\",\n            type: \"primary\",\n            onClick: handleEdit,\n            children: \"Submit\"\n          }, \"submit\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"cancel\",\n            onClick: handleCancel,\n            children: \" Cancel\"\n          }, \"back\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"4q1sTKeldwRWuiFJD+BIKdCz5tQ=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","deleteTodo","getTodo","getTodos","updateTodo","updateTodo2","Button","message","Modal","Todo","props","completed","setCompleted","loading","setLoading","visible","setVisible","edit","setEdit","title","id","handleComplete","e","todo","target","value","JSON","parse","complete","console","log","then","changeState","info","handelDelete","showModal","handleEdit","preventDefault","handleCancel","backgroundColor"],"sources":["/Users/drew/Desktop/Code/Elixir/phoenix/todo_phx/todo_react/src/components/Todo.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport {\n  deleteTodo, getTodo, getTodos, updateTodo, updateTodo2,\n} from '../jobs';\nimport './todo.css';\nimport 'antd/dist/antd.css';\nimport { Button, message, Modal } from 'antd';\n\nfunction Todo(props) {\n  const [completed, setCompleted] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [edit, setEdit] = useState({ title: '', id: '' });\n  useEffect(() => {\n    getTodos();\n  }, [setCompleted]);\n\n  const handleComplete = (e) => {\n    let todo = e.target.value;\n    todo = JSON.parse(todo);\n    todo.complete = !todo.complete;\n    console.log(todo.complete);\n    updateTodo(todo).then(() => props.changeState(['new data']));\n    message.info(todo.complete === false ? `${todo.title} Reset` : `${todo.title} Completed`);\n  };\n  const handelDelete = (e) => {\n    deleteTodo(e.target.value).then(() => props.changeState(['deleted todo']));\n    message.info('Task deleted');\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleEdit = (e) => {\n    e.preventDefault();\n    showModal();\n    console.log({ ...edit, id: props.id });\n    updateTodo({ ...edit, title: edit.title, id: props.id }).then(() => props.changeState(['new data']));\n    message.info('Task updated');\n    setVisible(false);\n  };\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  return (\n    <div className=\"todo\">\n      <h4>{props.title}</h4>\n      <p>\n        Complete:\n        {props.complete ? 'Yes' : 'No'}\n      </p>\n      <section className=\"update\">\n        <button className=\"edit\" style={{ backgroundColor: '#33bfff' }} onClick={showModal}>edit</button>\n        <button\n          className=\"complete-toggle\"\n          style={props.complete ? { backgroundColor: 'green' } : { backgroundColor: 'red' }}\n          value={props.todo}\n          onClick={handleComplete}\n        >\n          {props.complete ? 'Done' : 'complete task'}\n        </button>\n        <button className=\"delete\" value={props.id} onClick={handelDelete}>delete</button>\n\n        <Modal visible={visible} onOk={handleEdit} title=\"Edit\" footer={null}>\n\n          <form onSubmit={handleEdit}>\n\n            <input\n              type=\"text\"\nplaceholder=\"New Title\"\nvalue={edit.title}\n              onChange={(e) => setEdit({ ...edit, title: e.target.value })}\n            />\n            <Button\n              className=\"submit\"\nkey=\"submit\"\ntype=\"primary\"\n              onClick={handleEdit}\n            >\nSubmit\n</Button>\n            <Button className=\"cancel\" key=\"back\" onClick={handleCancel}> Cancel</Button>\n\n          </form>\n        </Modal>\n\n      </section>\n    </div>\n  );\n}\n\nexport default Todo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}