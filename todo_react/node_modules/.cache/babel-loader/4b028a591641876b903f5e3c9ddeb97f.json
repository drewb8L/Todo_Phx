{"ast":null,"code":"var _jsxFileName = \"/Users/drew/Desktop/Code/Elixir/phoenix/todo_react/src/components/TodoForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { createTodo } from \"../jobs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoForm = props => {\n  _s();\n\n  const [todo, setTodo] = useState({\n    title: '',\n    completed: false\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    createTodo(todo).then(() => props.changeState(['deleted todo']));\n    setTodo({ ...todo,\n      title: ''\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: todo.title,\n          onChange: e => setTodo({ ...todo,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \" Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(TodoForm, \"dSSVtD3NWIJYhfzotw6ftAe54Ew=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useEffect","useState","createTodo","TodoForm","props","todo","setTodo","title","completed","handleSubmit","e","preventDefault","then","changeState","target","value"],"sources":["/Users/drew/Desktop/Code/Elixir/phoenix/todo_react/src/components/TodoForm.jsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {createTodo} from \"../jobs\";\n\nconst TodoForm = (props) => {\nconst [todo, setTodo] = useState({title:'', completed: false})\n\n    const handleSubmit = (e) => {\n    e.preventDefault()\n        createTodo(todo).then(() => props.changeState(['deleted todo']))\n        setTodo({...todo, title: ''})\n    }\n\n    return(\n        <>\n            <div>\n                <h1>Todo List</h1>\n                <form onSubmit={handleSubmit}>\n                    <input type=\"text\"  value={todo.title} onChange={(e) => setTodo({...todo, title: e.target.value})}/>\n                    <button type={\"submit\"}> Submit </button>\n                </form>\n\n            </div>\n        </>\n    )\n}\n\nexport default TodoForm"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,UAAR,QAAyB,SAAzB;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAC5B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;IAACM,KAAK,EAAC,EAAP;IAAWC,SAAS,EAAE;EAAtB,CAAD,CAAhC;;EAEI,MAAMC,YAAY,GAAIC,CAAD,IAAO;IAC5BA,CAAC,CAACC,cAAF;IACIT,UAAU,CAACG,IAAD,CAAV,CAAiBO,IAAjB,CAAsB,MAAMR,KAAK,CAACS,WAAN,CAAkB,CAAC,cAAD,CAAlB,CAA5B;IACAP,OAAO,CAAC,EAAC,GAAGD,IAAJ;MAAUE,KAAK,EAAE;IAAjB,CAAD,CAAP;EACH,CAJD;;EAMA,oBACI;IAAA,uBACI;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAM,QAAQ,EAAEE,YAAhB;QAAA,wBACI;UAAO,IAAI,EAAC,MAAZ;UAAoB,KAAK,EAAEJ,IAAI,CAACE,KAAhC;UAAuC,QAAQ,EAAGG,CAAD,IAAOJ,OAAO,CAAC,EAAC,GAAGD,IAAJ;YAAUE,KAAK,EAAEG,CAAC,CAACI,MAAF,CAASC;UAA1B,CAAD;QAA/D;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,IAAI,EAAE,QAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ,iBADJ;AAYH,CArBD;;GAAMZ,Q;;KAAAA,Q;AAuBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}