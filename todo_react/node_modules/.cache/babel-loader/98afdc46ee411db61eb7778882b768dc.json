{"ast":null,"code":"var _jsxFileName = \"/Users/drew/Desktop/Code/Elixir/phoenix/todo_phx/todo_react/src/components/TodoForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { message } from 'antd';\nimport { createTodo } from '../jobs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const [todo, setTodo] = useState({\n    title: '',\n    completed: false\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (todo.title === '') {\n      message.error('Field can not be blank');\n    } else {\n      createTodo(todo).then(() => props.changeState(['deleted todo']));\n      setTodo({ ...todo,\n        title: ''\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: todo.title,\n        onChange: e => setTodo({ ...todo,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" Submit \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"qiFl9LL9YRVpl8LRLjfedRB6Xdg=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useEffect","useState","message","createTodo","TodoForm","props","todo","setTodo","title","completed","handleSubmit","e","preventDefault","error","then","changeState","target","value"],"sources":["/Users/drew/Desktop/Code/Elixir/phoenix/todo_phx/todo_react/src/components/TodoForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { message } from 'antd';\nimport { createTodo } from '../jobs';\n\nfunction TodoForm(props) {\n  const [todo, setTodo] = useState({ title: '', completed: false });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (todo.title === '') {\n      message.error('Field can not be blank');\n    } else {\n      createTodo(todo).then(() => props.changeState(['deleted todo']));\n      setTodo({ ...todo, title: '' });\n    }\n  };\n\n  return (\n    <div>\n      <h1>Todo List</h1>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={todo.title} onChange={(e) => setTodo({ ...todo, title: e.target.value })} />\n        <button type=\"submit\"> Submit </button>\n      </form>\n\n    </div>\n  );\n}\n\nexport default TodoForm;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,MAAxB;AACA,SAASC,UAAT,QAA2B,SAA3B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACvB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;IAAEO,KAAK,EAAE,EAAT;IAAaC,SAAS,EAAE;EAAxB,CAAD,CAAhC;;EAEA,MAAMC,YAAY,GAAIC,CAAD,IAAO;IAC1BA,CAAC,CAACC,cAAF;;IACA,IAAIN,IAAI,CAACE,KAAL,KAAe,EAAnB,EAAuB;MACrBN,OAAO,CAACW,KAAR,CAAc,wBAAd;IACD,CAFD,MAEO;MACLV,UAAU,CAACG,IAAD,CAAV,CAAiBQ,IAAjB,CAAsB,MAAMT,KAAK,CAACU,WAAN,CAAkB,CAAC,cAAD,CAAlB,CAA5B;MACAR,OAAO,CAAC,EAAE,GAAGD,IAAL;QAAWE,KAAK,EAAE;MAAlB,CAAD,CAAP;IACD;EACF,CARD;;EAUA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAM,QAAQ,EAAEE,YAAhB;MAAA,wBACE;QAAO,IAAI,EAAC,MAAZ;QAAmB,KAAK,EAAEJ,IAAI,CAACE,KAA/B;QAAsC,QAAQ,EAAGG,CAAD,IAAOJ,OAAO,CAAC,EAAE,GAAGD,IAAL;UAAWE,KAAK,EAAEG,CAAC,CAACK,MAAF,CAASC;QAA3B,CAAD;MAA9D;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,IAAI,EAAC,QAAb;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GAvBQb,Q;;KAAAA,Q;AAyBT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}