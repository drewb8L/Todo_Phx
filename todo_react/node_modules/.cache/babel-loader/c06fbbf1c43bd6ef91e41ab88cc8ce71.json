{"ast":null,"code":"const URL = process.env.REACT_APP_TODO_API_URL;\nexport const getTodos = () => {\n  console.log(URL);\n  return fetch(URL).then(res => res.json());\n};\nexport const getTodo = id => fetch(`${URL}/${id}`).then(res => res.json());\nexport const createTodo = todo => fetch(URL, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  body: JSON.stringify({\n    title: todo.title,\n    completed: todo.completed\n  })\n}).then(res => res.json());\nexport const updateTodo = todo => {\n  console.log(todo.id);\n  return fetch(`${URL}/${todo.id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id: todo.id,\n      title: todo.title,\n      complete: todo.complete\n    })\n  }).then(res => res.json());\n};\nexport const deleteTodo = id => fetch(`${URL}/${id}`, {\n  method: 'DELETE'\n}).then(res => res.json());","map":{"version":3,"names":["URL","process","env","REACT_APP_TODO_API_URL","getTodos","console","log","fetch","then","res","json","getTodo","id","createTodo","todo","method","headers","body","JSON","stringify","title","completed","updateTodo","complete","deleteTodo"],"sources":["/Users/drew/Desktop/Code/Elixir/phoenix/todo_phx/todo_react/src/jobs.js"],"sourcesContent":["const URL = process.env.REACT_APP_TODO_API_URL;\n\nexport const getTodos = () => {\n  console.log(URL);\n  return fetch(URL).then((res) => res.json());\n};\n\nexport const getTodo = (id) => fetch(`${URL}/${id}`).then((res) => res.json());\n\nexport const createTodo = (todo) => fetch(URL, {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n    title: todo.title,\n    completed: todo.completed,\n  }),\n}).then((res) => res.json());\n\nexport const updateTodo = (todo) => {\n  console.log(todo.id);\n  return fetch(`${URL}/${todo.id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      id: todo.id,\n      title: todo.title,\n      complete: todo.complete,\n    }),\n  }).then((res) => res.json());\n};\n\nexport const deleteTodo = (id) => fetch(`${URL}/${id}`, {\n  method: 'DELETE',\n}).then((res) => res.json());\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,sBAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;EAC5BC,OAAO,CAACC,GAAR,CAAYN,GAAZ;EACA,OAAOO,KAAK,CAACP,GAAD,CAAL,CAAWQ,IAAX,CAAiBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAAzB,CAAP;AACD,CAHM;AAKP,OAAO,MAAMC,OAAO,GAAIC,EAAD,IAAQL,KAAK,CAAE,GAAEP,GAAI,IAAGY,EAAG,EAAd,CAAL,CAAsBJ,IAAtB,CAA4BC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAApC,CAAxB;AAEP,OAAO,MAAMG,UAAU,GAAIC,IAAD,IAAUP,KAAK,CAACP,GAAD,EAAM;EAC7Ce,MAAM,EAAE,MADqC;EAE7CC,OAAO,EAAE;IACP,gBAAgB;EADT,CAFoC;EAK7CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;IACnBC,KAAK,EAAEN,IAAI,CAACM,KADO;IAEnBC,SAAS,EAAEP,IAAI,CAACO;EAFG,CAAf;AALuC,CAAN,CAAL,CASjCb,IATiC,CAS3BC,GAAD,IAASA,GAAG,CAACC,IAAJ,EATmB,CAA7B;AAWP,OAAO,MAAMY,UAAU,GAAIR,IAAD,IAAU;EAClCT,OAAO,CAACC,GAAR,CAAYQ,IAAI,CAACF,EAAjB;EACA,OAAOL,KAAK,CAAE,GAAEP,GAAI,IAAGc,IAAI,CAACF,EAAG,EAAnB,EAAsB;IAChCG,MAAM,EAAE,KADwB;IAEhCC,OAAO,EAAE;MACP,gBAAgB;IADT,CAFuB;IAKhCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MACnBP,EAAE,EAAEE,IAAI,CAACF,EADU;MAEnBQ,KAAK,EAAEN,IAAI,CAACM,KAFO;MAGnBG,QAAQ,EAAET,IAAI,CAACS;IAHI,CAAf;EAL0B,CAAtB,CAAL,CAUJf,IAVI,CAUEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAVV,CAAP;AAWD,CAbM;AAeP,OAAO,MAAMc,UAAU,GAAIZ,EAAD,IAAQL,KAAK,CAAE,GAAEP,GAAI,IAAGY,EAAG,EAAd,EAAiB;EACtDG,MAAM,EAAE;AAD8C,CAAjB,CAAL,CAE/BP,IAF+B,CAEzBC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFiB,CAA3B"},"metadata":{},"sourceType":"module"}