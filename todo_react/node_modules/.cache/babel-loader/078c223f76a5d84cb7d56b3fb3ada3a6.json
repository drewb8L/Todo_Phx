{"ast":null,"code":"var _jsxFileName = \"/Users/drew/Desktop/Code/Elixir/phoenix/todo_react/src/components/Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { deleteTodo, getTodo, getTodos, updateTodo, updateTodo2 } from \"../jobs\";\nimport './todo.css';\nimport { message } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Todo = props => {\n  _s();\n\n  const [completed, setCompleted] = useState(false);\n  const [visible, setVisible] = useState(false);\n  useEffect(() => {\n    getTodos();\n  }, [setCompleted]);\n\n  const handleComplete = e => {\n    let todo = e.target.value;\n    todo = JSON.parse(todo);\n    todo.complete = !todo.complete;\n    console.log(todo.complete);\n    updateTodo(todo).then(() => props.changeState(['new data']));\n    message.info(completed);\n  };\n\n  const handelDelete = e => {\n    deleteTodo(e.target.value).then(() => props.changeState(['deleted todo']));\n    message.info(\"Task deleted\");\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleEdit = e => {\n    showModal();\n    let todo = e.target.value;\n    todo = JSON.parse(todo);\n    console.log(todo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Complete: \", props.complete ? 'Yes' : 'No']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"update\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"edit\",\n          style: {\n            backgroundColor: \"#33bfff\"\n          },\n          onClick: handleEdit,\n          value: props.todo,\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"complete-toggle\",\n          style: props.complete ? {\n            backgroundColor: \"green\"\n          } : {\n            backgroundColor: \"red\"\n          },\n          value: props.todo,\n          onClick: handleComplete,\n          children: props.complete ? 'Done' : 'complete task'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete\",\n          value: props.id,\n          onClick: handelDelete,\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Todo, \"knWfxwBVw3UN4AYkXmZRgnikpPY=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","deleteTodo","getTodo","getTodos","updateTodo","updateTodo2","message","Todo","props","completed","setCompleted","visible","setVisible","handleComplete","e","todo","target","value","JSON","parse","complete","console","log","then","changeState","info","handelDelete","showModal","handleEdit","title","backgroundColor","id"],"sources":["/Users/drew/Desktop/Code/Elixir/phoenix/todo_react/src/components/Todo.js"],"sourcesContent":["import React, {useCallback, useEffect, useState} from \"react\";\nimport {deleteTodo, getTodo, getTodos, updateTodo, updateTodo2} from \"../jobs\";\nimport './todo.css'\nimport {message} from \"antd\";\n\n\nconst Todo = (props) => {\n\n    const [completed, setCompleted] = useState(false)\n    const [visible, setVisible] = useState(false)\n    useEffect(() => {\n        getTodos()\n    },[setCompleted])\n\n    const handleComplete = (e) =>{\n     let todo = e.target.value\n        todo = JSON.parse(todo)\n        todo.complete = !todo.complete\n        console.log(todo.complete)\n        updateTodo(todo).then(() => props.changeState(['new data']))\n        message.info(completed)\n\n    }\n    const handelDelete = (e) => {\n        deleteTodo(e.target.value).then(() => props.changeState(['deleted todo']))\n        message.info(\"Task deleted\")\n    }\n\n    const showModal = () => {\n        setVisible(true)\n    }\n\n    const handleEdit = (e) => {\n        showModal()\n        let todo = e.target.value\n        todo = JSON.parse(todo)\n        console.log(todo)\n}\n\n\n    return (\n        <>\n            <div className=\"todo\">\n                <h4>{props.title}</h4>\n                <p>Complete: {props.complete ? 'Yes' : 'No' }</p>\n                <section className=\"update\">\n                    <button className={\"edit\"} style={{backgroundColor: \"#33bfff\"}} onClick={handleEdit} value={props.todo}>edit</button>\n                    <button className={\"complete-toggle\"} style={props.complete ? {backgroundColor:\"green\"}: {backgroundColor:\"red\"}} value={props.todo} onClick={handleComplete}>{props.complete ? 'Done': 'complete task'}</button>\n                    <button className={\"delete\"} value={props.id} onClick={handelDelete}>delete</button>\n\n                </section>\n            </div>\n\n\n\n        </>\n    )\n}\n\nexport default Todo"],"mappings":"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"},"metadata":{},"sourceType":"module"}