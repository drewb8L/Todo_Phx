{"ast":null,"code":"var _jsxFileName = \"/Users/drew/Desktop/Code/Elixir/phoenix/todo_phx/todo_react/src/components/Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, message, Modal } from 'antd';\nimport { deleteTodo, getTodos, updateTodo } from '../jobs';\nimport './todo.css';\nimport 'antd/dist/antd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todo(_ref) {\n  _s();\n\n  let {\n    // eslint-disable-next-line react/prop-types\n    changeState,\n    complete,\n    id,\n    title,\n    todo\n  } = _ref;\n  // eslint-disable-next-line no-unused-vars\n  const [completed, setCompleted] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [edit, setEdit] = useState({\n    title: '',\n    id: ''\n  });\n  useEffect(() => {\n    getTodos();\n  }, [setCompleted]);\n\n  const handleComplete = e => {\n    // eslint-disable-next-line no-shadow\n    let todo = e.target.value;\n    todo = JSON.parse(todo);\n    todo.complete = !todo.complete;\n    updateTodo(todo).then(() => changeState(['new data']));\n    message.info(todo.complete === false ? `${todo.title} Reset` : `${todo.title} Completed`);\n  };\n\n  const handelDelete = e => {\n    deleteTodo(e.target.value).then(() => changeState(['deleted todo']));\n    message.info('Task deleted');\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleEdit = e => {\n    e.preventDefault();\n    showModal();\n    updateTodo({ ...edit,\n      title: edit.title,\n      id\n    }).then(() => changeState(['new data']));\n    message.info('Task updated');\n    setVisible(false);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Complete:\", complete ? 'Yes' : 'No']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"update\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"edit\",\n        style: {\n          backgroundColor: '#33bfff'\n        },\n        onClick: showModal,\n        children: \"edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"complete-toggle\",\n        style: // eslint-disable-next-line react/prop-types\n        complete ? {\n          backgroundColor: 'green'\n        } : {\n          backgroundColor: 'red'\n        },\n        value: todo,\n        onClick: handleComplete,\n        children: complete ? 'Done' : 'complete task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"delete\",\n        value: id,\n        onClick: handelDelete,\n        children: \"delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        visible: visible,\n        onOk: handleEdit,\n        title: \"Edit\",\n        footer: null,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleEdit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"New Title\",\n            value: edit.title,\n            onChange: e => setEdit({ ...edit,\n              title: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"submit\",\n            type: \"primary\",\n            onClick: handleEdit,\n            children: \"Submit\"\n          }, \"submit\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"cancel\",\n            onClick: handleCancel,\n            children: [' ', \"Cancel\"]\n          }, \"back\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todo, \"A7RptzcL/0s9uNmWV5WUaWmBkwo=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useEffect","useState","Button","message","Modal","deleteTodo","getTodos","updateTodo","Todo","changeState","complete","id","title","todo","completed","setCompleted","visible","setVisible","edit","setEdit","handleComplete","e","target","value","JSON","parse","then","info","handelDelete","showModal","handleEdit","preventDefault","handleCancel","backgroundColor"],"sources":["/Users/drew/Desktop/Code/Elixir/phoenix/todo_phx/todo_react/src/components/Todo.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, message, Modal } from 'antd';\nimport { deleteTodo, getTodos, updateTodo } from '../jobs';\nimport './todo.css';\nimport 'antd/dist/antd.css';\n\nfunction Todo({\n  // eslint-disable-next-line react/prop-types\n  changeState, complete, id, title, todo,\n}) {\n  // eslint-disable-next-line no-unused-vars\n  const [completed, setCompleted] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [edit, setEdit] = useState({ title: '', id: '' });\n  useEffect(() => {\n    getTodos();\n  }, [setCompleted]);\n\n  const handleComplete = (e) => {\n    // eslint-disable-next-line no-shadow\n    let todo = e.target.value;\n    todo = JSON.parse(todo);\n    todo.complete = !todo.complete;\n    updateTodo(todo).then(() => changeState(['new data']));\n    message.info(\n      todo.complete === false\n        ? `${todo.title} Reset`\n        : `${todo.title} Completed`,\n    );\n  };\n  const handelDelete = (e) => {\n    deleteTodo(e.target.value).then(() => changeState(['deleted todo']));\n    message.info('Task deleted');\n  };\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleEdit = (e) => {\n    e.preventDefault();\n    showModal();\n    updateTodo({ ...edit, title: edit.title, id }).then(() => changeState(['new data']));\n    message.info('Task updated');\n    setVisible(false);\n  };\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  return (\n    <div className=\"todo\">\n      <h4>{title}</h4>\n      <p>\n        Complete:\n        {complete ? 'Yes' : 'No'}\n      </p>\n      <section className=\"update\">\n        <button\n          type=\"button\"\n          className=\"edit\"\n          style={{ backgroundColor: '#33bfff' }}\n          onClick={showModal}\n        >\n          edit\n        </button>\n        <button\n          type=\"button\"\n          className=\"complete-toggle\"\n          style={\n            // eslint-disable-next-line react/prop-types\n            complete\n              ? { backgroundColor: 'green' }\n              : { backgroundColor: 'red' }\n          }\n          value={todo}\n          onClick={handleComplete}\n        >\n          {complete ? 'Done' : 'complete task'}\n        </button>\n        <button\n          type=\"button\"\n          className=\"delete\"\n          value={id}\n          onClick={handelDelete}\n        >\n          delete\n        </button>\n\n        <Modal visible={visible} onOk={handleEdit} title=\"Edit\" footer={null}>\n          <form onSubmit={handleEdit}>\n            <input\n              type=\"text\"\n              placeholder=\"New Title\"\n              value={edit.title}\n              onChange={(e) => setEdit({ ...edit, title: e.target.value })}\n            />\n            <Button\n              className=\"submit\"\n              key=\"submit\"\n              type=\"primary\"\n              onClick={handleEdit}\n            >\n              Submit\n            </Button>\n            <Button className=\"cancel\" key=\"back\" onClick={handleCancel}>\n              {' '}\n              Cancel\n            </Button>\n          </form>\n        </Modal>\n      </section>\n    </div>\n  );\n}\n\nexport default Todo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}